networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
  postgres_data: {}
  redis_data: {}
  react_build: {}

services:
  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    expose:
      - 9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    expose:
      - 3000
    networks:
      - monitoring
  
  node-application-monitoring-app:
    build:
      context: ./ApiMundoFacil
      dockerfile: Dockerfile
    container_name: api_node_techshop
    restart: always
    ports:
      - "5050:5050"
    expose:
      - 5050
    env_file: 
      - ./ApiMundoFacil/.env.production
    networks:
      - monitoring
  
  react-application-mundo-facil:
    build:
      context: ./Mundo-Facil
      dockerfile: Dockerfile
    container_name: mundo_facil
    ports:
      - "4173:4173"
    env_file: 
      - ./Mundo-Facil/.env.development
      
    depends_on: 
      - node-application-monitoring-app
    volumes:
      - react_build:/app/dist
    networks:
      - monitoring

  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    container_name: mundo_facil_nginx
    volumes:
      - react_build:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - node-application-monitoring-app
      - react-application-mundo-facil
    networks:
      - monitoring
